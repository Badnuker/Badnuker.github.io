[{"id":"9e6265357233104fab609d4c9c78c596","title":"CSP-S 2023游记","content":"T1密码就  位，一眼丁真鉴定为暴力。\n枚举正确密码，判断能否变出所给的  种状态。\n只转一个拨圈的简单，只有一个数不就行。\n对于需要转两个拨圈的，打个表，暴力记两个拨圈同时旋转能变成啥。\nT2最大惨案，做了  个小时才发现是子串不是子序列（寄）。\n考场上联想到括号序列，但我用的是链表维护，枚举子串，拿了  的部分分。\n出来听同机房大佬们交流才发现可以用栈，多  pt。\nT3煞笔大模拟，初升出题人。\nT4不会。\n总结写了的分： pt。\n实际得分：（待更新）。\n（待更新）\n","slug":"CSP-S-2023游记","date":"2023-10-22T19:15:02.000Z","categories_index":"","tags_index":"游记","author_index":"Badnuker"},{"id":"e4178026914c4458eb527c4a1d58a3e9","title":"《大卫 · 科波菲尔》读后感","content":"在高二学年的 9 月份，我读完了《大卫 · 科波菲尔》。这本书由查尔斯·狄更斯创作，是他 “心中最宠爱的孩子”。在这部带有自传性质的小说里，狄更斯藉大卫自身的历史和经验，从某些方面回顾和总结了自己的生活道路，表现出他的人生态度、道德理想，给了我很多启示。同时，作品所展示的绘声绘色、丰富多彩的生活画面，具有鲜明深刻的时代特点，使我更加深刻的认识到作者所处时代人际关系的冷漠和利益观念的扭曲。\n故事以大卫·科波菲尔的童年为开端。他从小就没有父亲的陪伴，继父谋得斯通对待大卫极不友好，将他送入了管理苛刻的寄宿学校萨伦学堂。大卫母亲去世后，他的继父将年仅 10 岁的大卫送往谋得斯通—格林比货行，让他独自谋生。忍受不了乏味生活的大卫决定逃跑，一个人徒步从伦敦走到了丹佛，最终见到了他唯一的亲人——贝特西 · 特洛伍德姨妈。\n大卫的童年之所以如此的不幸，我认为直接原因就是他的继父谋得斯通先生。他为了金钱与大卫的母亲结婚，结婚后又遵循迂腐的婚姻观念，试图“塑造好她的性格，给她灌输一些她所必需的坚定果断的信念”，最终的结果却是妻子的病逝。通过谋得斯通先生，我认识到资本主义核心价值观的特征拜金主义对家庭层面的影响。小说中谋得斯通姐弟都是拜金主义的典型例子，谋得斯通先生于大卫母亲的恋爱建立在金钱的基础上，一旦结婚以后他就原型毕露，一步步将大卫赶出家庭，还将大卫的母亲折磨致死。相比之下，大卫的姨妈贝特西则是一个自由主义的正面形象，她收养了大卫，尊重他的选择，花大价钱将他送去博士公堂学习，对大卫价值观的塑造有着重大的影响。\n大卫的青年至成年时期，是他一生中重要的转折点。通过姨妈的介绍，大卫寄宿在律师威克菲尔家中，与他的女儿爱格妮斯相识。她是大卫的吉星，给予大卫无私的帮助和支持，为大卫出谋划策，结下了深厚的友谊。然而，后半本书最大的反派乌利亚 · 希普也伴随这样温馨的局面介入大卫的生活中。他无时无刻将自己形容得极为卑微，却慢慢将魔爪伸向周围的人。他凭借卑微的姿态取得威克菲尔的信任，又一步一步的将律师所的权力纳入自己麾下，最终被米考伯，大卫等人共同揭发后瞬间撕去了虚伪的面具，原型毕露。在我看来，乌利亚代表了那些资本主义右翼分子的极度的虚伪。他善于利用别人弱点做损人利己的事，私底下慢慢的壮大自己的权力，表面上还要显得阿谀奉承，被揭露后又立刻撕破脸，是那些虚伪的右翼分子试图慢慢掌控自己国家的极其形象的体现。生活中，我们也要时刻注意身边的“乌利亚”，用法律武器武装自己，提防落入这些人的陷阱，被他们所控制。\n小说中还有一个人给我留下了深刻的印象，他就是汉姆。他是佩格蒂先生的好侄子，艾米丽的未婚夫。在作者的笔下，汉姆淋漓尽致地展现了一个心地善良，吃苦耐劳的劳动人民的形象，在亚茅斯发生暴风雨时，其他人还在观望，汉姆是唯一一个下水救船的，即使船上有曾经骗走他的未婚妻艾米丽，给他带来不小打击的斯蒂福思。大浪将两人拍进水中，一方面刻画了斯蒂福思恶有恶报的结局，一方面令人为汉姆悲惨的结局感到惋惜。\n作为一本带有现实主义色彩的小说，《大卫 · 科波菲尔》通过描写一个人的一生和他所经历的人和事向我们展现了一幅 19 世纪中叶涵盖英国社会各个层面的生活画卷。这一时代的英国表面光鲜亮丽，实则社会贫富差距悬殊，社会矛盾日益凸显。大卫就在这样的环境中长大，亲身体会世态炎凉。对于生活在新时代中国特色社会主义光辉下的我们自然与大卫没有相同的经历，但这本小说对尚处于青年时期的我们仁具有重大的价值意义。我们应当吸取大卫身上的顽强刻苦的精神品质，在生活中像爱格妮斯，汉姆一样善待他人，避免成为乌利亚那样的极端个人主义者。\n","slug":"大卫科波菲尔读后感","date":"2023-10-06T23:34:58.000Z","categories_index":"","tags_index":"读后感","author_index":"Badnuker"},{"id":"9c99dc11ee58b9118dc125cce366c4cd","title":"非常好矩阵封装","content":"Tips\n支持直接 cin, cout\n\nCode12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273namespace Badnuker &#123;\tconst int mod = 1e9 + 7;\tclass Matrix &#123;\t\tpublic:\t\t\tint row, col;\t\t\tint a[105][105];\t\t\tMatrix() &#123;\t\t\t\tmemset(a, 0, sizeof(a));\t\t\t&#125;\t\t\tMatrix(int x, int y) &#123;\t\t\t\trow = x;\t\t\t\tcol = y;\t\t\t\tmemset(a, 0, sizeof(a));\t\t\t&#125;\t\t\tfriend istream &amp; operator&gt;&gt;(istream &amp;is, Matrix &amp;x) &#123;\t\t\t\tfor (int i = 1; i &lt;= x.row; i++) &#123;\t\t\t\t\tfor (int j = 1; j &lt;= x.col; j++) &#123;\t\t\t\t\t\tis &gt;&gt; x.a[i][j];\t\t\t\t\t&#125;\t\t\t\t&#125;\t\t\t\treturn is;\t\t\t&#125;\t\t\tfriend ostream &amp; operator&lt;&lt;(ostream &amp;os, const Matrix &amp;x) &#123;\t\t\t\tfor (int i = 1; i &lt;= x.row; i++) &#123;\t\t\t\t\tfor (int j = 1; j &lt;= x.col; j++) &#123;\t\t\t\t\t\tos &lt;&lt; x.a[i][j] &lt;&lt; &#x27; &#x27;;\t\t\t\t\t&#125;\t\t\t\t\tif (i != x.row) &#123;\t\t\t\t\t\tos &lt;&lt; &#x27;\\n&#x27;;\t\t\t\t\t&#125;\t\t\t\t&#125;\t\t\t\treturn os;\t\t\t&#125;\t\t\tMatrix operator*(const Matrix &amp; x) &#123;\t\t\t\tMatrix res(row, x.col);\t\t\t\tfor (int i = 1; i &lt;= row; i++) &#123;\t\t\t\t\tfor (int k = 1; k &lt;= col; k++) &#123;\t\t\t\t\t\tint tmp = a[i][k];\t\t\t\t\t\tfor (int j = 1; j &lt;= x.col; j++) &#123;\t\t\t\t\t\t\t(res.a[i][j] += tmp * x.a[k][j]) %= mod;\t\t\t\t\t\t&#125;\t\t\t\t\t&#125;\t\t\t\t&#125;\t\t\t\treturn res;\t\t\t&#125;\t\t\tvoid operator*=(const Matrix &amp; x) &#123;\t\t\t\t(*this) = (*this) * x;\t\t\t&#125;\t\t\tvoid operator%=(const int &amp;x __attribute__((unused))) &#123;&#125;\t&#125;;\ttemplate&lt;typename T&gt;\tT ksm(T x, int y) &#123;\t\tT res = x;\t\ty--;\t\twhile (y) &#123;\t\t\tif (y &amp; 1) &#123;\t\t\t\tres *= x;\t\t\t&#125;\t\t\tx *= x;\t\t\ty &gt;&gt;= 1;\t\t&#125;\t\treturn res;\t&#125;&#125;","slug":"非常好矩阵封装","date":"2023-09-29T20:13:34.000Z","categories_index":"","tags_index":"模板","author_index":"Badnuker"},{"id":"388a2cc7ccd390e63439623ba88b8119","title":"实用网站索引","content":"（实时更新中）\n按名称分类A阿里云\nAGE动漫\nBBiliBili\n博客园\nC拷貝漫畫\nCodeforces\nD戴森球计划蓝图预览\n戴森球计划量产量化计算器工具\nEEasyGPT\nFflorr.io\nFlorr.io Wiki\nGGoogle开源项目风格指南\nGraph Editor\nHHexo\nHexo Aurora Docs\nHTML5 Speedtest\nIJKL蓝奏云\nLaTeX-symbols.pdf\n莉莉云\n洛谷\n洛谷帖子保存站\n洛谷题目测试点配置文件\nLuoguLite开发文档\nMMinecraft Wiki\nMinecraft1.20及以上版本FabricMod开发可能遇到的问题\nMini Billar\nMySQL教程\nNOOeis\nOfficial Honkai Impact 3 Wiki\nOIso++\nOI Wiki\nPPixiv\nPython3文档\nQQBXTOJ\n雀魂\nRRoad 2 coding\nS傻狗本狗の小破站\n圣芙蕾雅档案馆\nSM.MS\nTTestlib使用指南\nTETR.IO\nUUOJ部署指北\nUSTC开源软件镜像站\nVWWGSZ Online Judge\nX下载\nY樱花Frp\n元气Shop\nZ#126邮箱\n","slug":"实用网站索引","date":"2023-09-21T22:55:42.000Z","categories_index":"","tags_index":"工具","author_index":"Badnuker"},{"id":"c3c6ea79e312bab1580426de428b17c5","title":"初赛中的排序算法","content":"（注：如未标注，表中信息均来源于 OI Wiki）\n\n\n\n算法\n时间复杂度（平均）\n时间复杂度（最优）\n时间复杂度（最差）\n稳定性\n\n\n\n选择排序\n\n\n\n不稳定\n\n\n冒泡排序\n\n\n\n稳定\n\n\n插入排序\n\n\n\n稳定\n\n\n计数排序\n\n\n\n稳定\n\n\n基数排序\n\n\n\n稳定\n\n\n快速排序\n\n\n\n不稳定\n\n\n归并排序\n\n\n\n稳定\n\n\n堆排序\n\n\n\n不稳定\n\n\n桶排序\n\n\n\n稳定\n\n\n希尔排序\n根据步长序列的不同而不同 \n\n\n不稳定\n\n\n参考资料\n希尔排序 - 维基百科，自由的百科全书\n\n","slug":"初赛中的排序算法","date":"2023-09-21T22:53:38.000Z","categories_index":"","tags_index":"算法基础","author_index":"Badnuker"},{"id":"408d284ba38138d0b621ff151bb14130","title":"Markdown&Latex测试","content":"\n\n123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566#include&lt;bits/stdc++.h&gt;using namespace std;const int maxn = 5e5 + 5;int tot, ccnt;int deg[maxn];unordered_map&lt;string, int&gt; col;vector&lt;int&gt; p[maxn];struct DSU {\tint fa[maxn];\tDSU() {\t\tfor (int i = 1; i &lt; maxn; i++) {\t\t\tfa[i] = i;\t\t}\t}\tint getfa(int x) {\t\tif (fa[x] == x) {\t\t\treturn x;\t\t} else {\t\t\treturn fa[x] = getfa(fa[x]);\t\t}\t}\tbool merge(int x, int y) {\t\tint fx = getfa(x), fy = getfa(y);\t\tif (fx == fy) {\t\t\treturn 0;\t\t}\t\tfa[fx] = fy;\t\treturn 1;\t}} dsu;int main() {\tios::sync_with_stdio(0);\tcin.tie(0);\tstring s, t;\twhile (cin &gt;&gt; s &gt;&gt; t) {\t\tif (!col[s]) {\t\t\tcol[s] = ++tot;\t\t}\t\tif (!col[t]) {\t\t\tcol[t] = ++tot;\t\t}\t\tif (dsu.merge(col[s], col[t])) {\t\t\tccnt++;\t\t}\t\tp[col[s]].push_back(col[t]);\t\tp[col[t]].push_back(col[s]);\t\tdeg[col[s]]++, deg[col[t]]++;\t}\tif (ccnt &lt; tot - 1) {\t\tcout &lt;&lt; \"Impossible\\n\";\t\treturn 0;\t}\tint cnt = 0;\tfor (int i = 1; i &lt;= tot; i++) {\t\tif ((deg[i] &amp; 1) &amp;&amp; ++cnt &gt; 2) {\t\t\tcout &lt;&lt; \"Impossible\\n\";\t\t\treturn 0;\t\t}\t}\tcout &lt;&lt; \"Possible\\n\";\treturn 0;}","slug":"Markdown-Latex测试","date":"2023-09-20T23:40:20.000Z","categories_index":"","tags_index":"测试","author_index":"Badnuker"}]