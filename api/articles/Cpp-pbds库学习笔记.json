{"title":"C++ pb_ds库学习笔记","uid":"3ff1fccb551d916fe3dfc94fb9c855a9","slug":"Cpp-pbds库学习笔记","date":"2023-11-15T22:36:45.000Z","updated":"2023-11-15T15:41:08.117Z","comments":true,"path":"api/articles/Cpp-pbds库学习笔记.json","keywords":null,"cover":null,"content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>pb_ds 库是 gnu 内置的一个功能强大的库，封装了许多常用但代码量大的数据结构，例如 红黑树、Splay、可并堆…</p>\n<p>需要新引入的头文件和命名空间：</p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki github-dark\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F97583\">#include</span><span style=\"color: #9ECBFF\">&lt;bits/extc++.h&gt;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">using</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">namespace</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">__gnu_cxx</span><span style=\"color: #E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">using</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">namespace</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">__gnu_pbds</span><span style=\"color: #E1E4E8\">;</span></span></code></pre></div><p>（注意：Clang++中没有此扩展库，需要使用g++编译器，并且不能是TDM-GCC）</p>\n<h2 id=\"堆\"><a href=\"#堆\" class=\"headerlink\" title=\"堆\"></a>堆</h2><h3 id=\"声明\"><a href=\"#声明\" class=\"headerlink\" title=\"声明\"></a>声明</h3><div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki github-dark\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F97583\">template</span><span style=\"color: #E1E4E8\">&lt;</span><span style=\"color: #F97583\">class</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">_Tv</span><span style=\"color: #E1E4E8\">, </span><span style=\"color: #F97583\">class</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">Cmp_Fn</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">std</span><span style=\"color: #E1E4E8\">::less&lt;</span><span style=\"color: #B392F0\">__gnu_pbds</span><span style=\"color: #E1E4E8\">::</span><span style=\"color: #B392F0\">priority_queue</span><span style=\"color: #E1E4E8\">&lt;</span><span style=\"color: #B392F0\">_Tv</span><span style=\"color: #E1E4E8\">, </span><span style=\"color: #B392F0\">Cmp_Fn</span><span style=\"color: #E1E4E8\">, </span><span style=\"color: #B392F0\">Tag</span><span style=\"color: #E1E4E8\">, </span><span style=\"color: #B392F0\">_Alloc</span><span style=\"color: #E1E4E8\">&gt;::</span><span style=\"color: #B392F0\">value_type</span><span style=\"color: #E1E4E8\">&gt;, </span><span style=\"color: #F97583\">class</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">Tag</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">__gnu_pbds</span><span style=\"color: #E1E4E8\">::</span><span style=\"color: #F97583\">pairing_heap_tag</span><span style=\"color: #E1E4E8\">, </span><span style=\"color: #F97583\">class</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">_Alloc</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">std</span><span style=\"color: #E1E4E8\">::allocator&lt;</span><span style=\"color: #F97583\">char</span><span style=\"color: #E1E4E8\">&gt;</span><span style=\"color: #F97583\">&gt;</span><span style=\"color: #E1E4E8\"> class </span><span style=\"color: #B392F0\">__gnu_pbds</span><span style=\"color: #E1E4E8\">::priority_queue</span><span style=\"color: #F97583\">&lt;_Tv</span><span style=\"color: #E1E4E8\">, </span><span style=\"color: #F97583\">Cmp_Fn</span><span style=\"color: #E1E4E8\">, </span><span style=\"color: #F97583\">Tag</span><span style=\"color: #E1E4E8\">, </span><span style=\"color: #F97583\">_Alloc</span><span style=\"color: #E1E4E8\">&gt;</span></span></code></pre></div><p>解析：</p>\n<ul>\n<li><code>_Tv</code>：堆中元素的类型</li>\n<li><code>Cmp_Fn</code>：比较函数，默认为<code>less</code>，与<code>std::priority_queue</code>相同，为大根堆</li>\n<li><code>Tag</code>：默认即可</li>\n<li><code>_Alloc</code>：别管</li>\n</ul>\n<h3 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h3><p>定义一个存整数的小根堆：</p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki github-dark\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #B392F0\">__gnu_pbds</span><span style=\"color: #E1E4E8\">::priority_queue</span><span style=\"color: #F97583\">&lt;int</span><span style=\"color: #E1E4E8\">,greater</span><span style=\"color: #F97583\">&lt;int&gt;&gt;</span><span style=\"color: #E1E4E8\"> q;</span></span></code></pre></div><p>（为与STL区分开，此处应指定命名空间<code>__gnu_pbds::</code>）</p>\n<h3 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h3><p>区别于STL的实用用法：</p>\n<p><code>push</code>：pb_ds中的<code>push</code>函数具有返回值，返回被<code>push</code>元素的迭代器</p>\n<p><code>modify</code>：传入<code>(迭代器，新值)</code>，将迭代器所指向的元素变成新的值</p>\n<p><code>join</code>：用法形如<code>a.join(b)</code>，将<code>b</code>堆合并到<code>a</code>堆（需要两个堆定义相同），并清空<code>b</code>堆</p>\n<h3 id=\"例题\"><a href=\"#例题\" class=\"headerlink\" title=\"例题\"></a>例题</h3><p><strong><a href=\"https://www.luogu.com.cn/problem/P3377\">洛谷P3377 【模板】左偏树&#x2F;可并堆</a></strong></p>\n<p>通过代码（O2：212ms）：</p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki github-dark\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F97583\">#include</span><span style=\"color: #9ECBFF\">&lt;bits/stdc++.h&gt;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">#include</span><span style=\"color: #9ECBFF\">&lt;bits/extc++.h&gt;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">using</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">namespace</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">std</span><span style=\"color: #E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">using</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">namespace</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">__gnu_cxx</span><span style=\"color: #E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">using</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">namespace</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">__gnu_pbds</span><span style=\"color: #E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">const</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">int</span><span style=\"color: #E1E4E8\"> maxn </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #79B8FF\">1</span><span style=\"color: #F97583\">e</span><span style=\"color: #79B8FF\">5</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">+</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #79B8FF\">5</span><span style=\"color: #E1E4E8\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F97583\">int</span><span style=\"color: #E1E4E8\"> n, m;</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">int</span><span style=\"color: #E1E4E8\"> d[maxn];</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">int</span><span style=\"color: #E1E4E8\"> fa[maxn];</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">__gnu_pbds</span><span style=\"color: #E1E4E8\">::priority_queue</span><span style=\"color: #F97583\">&lt;</span><span style=\"color: #E1E4E8\">pair</span><span style=\"color: #F97583\">&lt;int</span><span style=\"color: #E1E4E8\">, </span><span style=\"color: #F97583\">int&gt;</span><span style=\"color: #E1E4E8\">, greater</span><span style=\"color: #F97583\">&lt;</span><span style=\"color: #E1E4E8\">pair</span><span style=\"color: #F97583\">&lt;int</span><span style=\"color: #E1E4E8\">, </span><span style=\"color: #F97583\">int&gt;&gt;&gt;</span><span style=\"color: #E1E4E8\"> q[maxn];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F97583\">int</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">getfa</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #F97583\">int</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #FFAB70\">x</span><span style=\"color: #E1E4E8\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    </span><span style=\"color: #F97583\">if</span><span style=\"color: #E1E4E8\"> (fa[x] </span><span style=\"color: #F97583\">==</span><span style=\"color: #E1E4E8\"> x) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">        </span><span style=\"color: #F97583\">return</span><span style=\"color: #E1E4E8\"> x;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    &#125; </span><span style=\"color: #F97583\">else</span><span style=\"color: #E1E4E8\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">        </span><span style=\"color: #F97583\">return</span><span style=\"color: #E1E4E8\"> fa[x] </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">getfa</span><span style=\"color: #E1E4E8\">(fa[x]);</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F97583\">int</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">main</span><span style=\"color: #E1E4E8\">() &#123;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    </span><span style=\"color: #B392F0\">ios</span><span style=\"color: #E1E4E8\">::</span><span style=\"color: #B392F0\">sync_with_stdio</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #79B8FF\">0</span><span style=\"color: #E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    cin.</span><span style=\"color: #B392F0\">tie</span><span style=\"color: #E1E4E8\">(</span><span style=\"color: #79B8FF\">0</span><span style=\"color: #E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    cin </span><span style=\"color: #F97583\">&gt;&gt;</span><span style=\"color: #E1E4E8\"> n </span><span style=\"color: #F97583\">&gt;&gt;</span><span style=\"color: #E1E4E8\"> m;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    </span><span style=\"color: #F97583\">for</span><span style=\"color: #E1E4E8\"> (</span><span style=\"color: #F97583\">int</span><span style=\"color: #E1E4E8\"> i </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #79B8FF\">1</span><span style=\"color: #E1E4E8\">, x; i </span><span style=\"color: #F97583\">&lt;=</span><span style=\"color: #E1E4E8\"> n; i</span><span style=\"color: #F97583\">++</span><span style=\"color: #E1E4E8\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">        cin </span><span style=\"color: #F97583\">&gt;&gt;</span><span style=\"color: #E1E4E8\"> x;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">        q[i].</span><span style=\"color: #B392F0\">push</span><span style=\"color: #E1E4E8\">(&#123;x, i&#125;);</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">        fa[i] </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> i;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    </span><span style=\"color: #F97583\">for</span><span style=\"color: #E1E4E8\"> (</span><span style=\"color: #F97583\">int</span><span style=\"color: #E1E4E8\"> i </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #79B8FF\">1</span><span style=\"color: #E1E4E8\">, opt, x, y; i </span><span style=\"color: #F97583\">&lt;=</span><span style=\"color: #E1E4E8\"> m; i</span><span style=\"color: #F97583\">++</span><span style=\"color: #E1E4E8\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">        cin </span><span style=\"color: #F97583\">&gt;&gt;</span><span style=\"color: #E1E4E8\"> opt;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">        </span><span style=\"color: #F97583\">if</span><span style=\"color: #E1E4E8\"> (opt </span><span style=\"color: #F97583\">==</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #79B8FF\">1</span><span style=\"color: #E1E4E8\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">            cin </span><span style=\"color: #F97583\">&gt;&gt;</span><span style=\"color: #E1E4E8\"> x </span><span style=\"color: #F97583\">&gt;&gt;</span><span style=\"color: #E1E4E8\"> y;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">            </span><span style=\"color: #F97583\">if</span><span style=\"color: #E1E4E8\"> (d[x] </span><span style=\"color: #F97583\">||</span><span style=\"color: #E1E4E8\"> d[y]) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">                </span><span style=\"color: #F97583\">continue</span><span style=\"color: #E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">            &#125;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">            </span><span style=\"color: #F97583\">int</span><span style=\"color: #E1E4E8\"> fx </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">getfa</span><span style=\"color: #E1E4E8\">(x), fy </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">getfa</span><span style=\"color: #E1E4E8\">(y);</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">            </span><span style=\"color: #F97583\">if</span><span style=\"color: #E1E4E8\"> (fx </span><span style=\"color: #F97583\">==</span><span style=\"color: #E1E4E8\"> fy) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">                </span><span style=\"color: #F97583\">continue</span><span style=\"color: #E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">            &#125;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">            fa[fx] </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> fy;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">            q[fy].</span><span style=\"color: #B392F0\">join</span><span style=\"color: #E1E4E8\">(q[fx]);</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">        &#125; </span><span style=\"color: #F97583\">else</span><span style=\"color: #E1E4E8\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">            cin </span><span style=\"color: #F97583\">&gt;&gt;</span><span style=\"color: #E1E4E8\"> x;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">            </span><span style=\"color: #F97583\">if</span><span style=\"color: #E1E4E8\"> (d[x]) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">                cout </span><span style=\"color: #F97583\">&lt;&lt;</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">-</span><span style=\"color: #79B8FF\">1</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #F97583\">&lt;&lt;</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #9ECBFF\">&#39;</span><span style=\"color: #79B8FF\">\\n</span><span style=\"color: #9ECBFF\">&#39;</span><span style=\"color: #E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">                </span><span style=\"color: #F97583\">continue</span><span style=\"color: #E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">            &#125;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">            </span><span style=\"color: #F97583\">int</span><span style=\"color: #E1E4E8\"> ff </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #B392F0\">getfa</span><span style=\"color: #E1E4E8\">(x);</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">            cout </span><span style=\"color: #F97583\">&lt;&lt;</span><span style=\"color: #E1E4E8\"> q[ff].</span><span style=\"color: #B392F0\">top</span><span style=\"color: #E1E4E8\">().first </span><span style=\"color: #F97583\">&lt;&lt;</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #9ECBFF\">&#39;</span><span style=\"color: #79B8FF\">\\n</span><span style=\"color: #9ECBFF\">&#39;</span><span style=\"color: #E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">            d[q[ff].</span><span style=\"color: #B392F0\">top</span><span style=\"color: #E1E4E8\">().second] </span><span style=\"color: #F97583\">=</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #79B8FF\">1</span><span style=\"color: #E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">            q[ff].</span><span style=\"color: #B392F0\">pop</span><span style=\"color: #E1E4E8\">();</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">    </span><span style=\"color: #F97583\">return</span><span style=\"color: #E1E4E8\"> </span><span style=\"color: #79B8FF\">0</span><span style=\"color: #E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color: #E1E4E8\">&#125;</span></span></code></pre></div><h1 id=\"未完待续…\"><a href=\"#未完待续…\" class=\"headerlink\" title=\"未完待续…\"></a>未完待续…</h1>","text":"前言pb_ds 库是 gnu 内置的一个功能强大的库，封装了许多常用但代码量大的数据结构，例如 红黑树、Splay、可并堆… 需要新引入的头文件和命名空间： c...","permalink":"/post/Cpp-pbds库学习笔记","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"杂项","slug":"杂项","count":1,"path":"api/tags/杂项.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A0%86\"><span class=\"toc-text\">堆</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A3%B0%E6%98%8E\"><span class=\"toc-text\">声明</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\">定义</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%94%A8%E6%B3%95\"><span class=\"toc-text\">用法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BE%8B%E9%A2%98\"><span class=\"toc-text\">例题</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%9C%AA%E5%AE%8C%E5%BE%85%E7%BB%AD%E2%80%A6\"><span class=\"toc-text\">未完待续…</span></a>","author":{"name":"Badnuker","slug":"blog-author","avatar":"https://cdn.luogu.com.cn/upload/usericon/799947.png","link":"/","description":"关注 Badnuker 谢谢喵~","socials":{"github":"https://github.com/Badnuker","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Markdown&Latex测试","uid":"408d284ba38138d0b621ff151bb14130","slug":"Markdown-Latex测试","date":"2023-09-20T23:40:20.000Z","updated":"2023-11-15T15:41:08.117Z","comments":true,"path":"api/articles/Markdown-Latex测试.json","keywords":null,"cover":null,"text":" cpp#include&lt;bits/stdc++.h&gt; using namespace std; const int maxn = 5e5 + 5;...","permalink":"/post/Markdown-Latex测试","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"测试","slug":"测试","count":1,"path":"api/tags/测试.json"}],"author":{"name":"Badnuker","slug":"blog-author","avatar":"https://cdn.luogu.com.cn/upload/usericon/799947.png","link":"/","description":"关注 Badnuker 谢谢喵~","socials":{"github":"https://github.com/Badnuker","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"CSP-S 2023游记","uid":"9e6265357233104fab609d4c9c78c596","slug":"CSP-S-2023游记","date":"2023-10-22T19:15:02.000Z","updated":"2023-11-15T15:41:08.117Z","comments":true,"path":"api/articles/CSP-S-2023游记.json","keywords":null,"cover":null,"text":"T1密码就 位，一眼丁真鉴定为暴力。 枚举正确密码，判断能否变出所给的 种状态。 只转一个拨圈的简单，只有一个数不就行。 对于需要转两个拨圈的，打个表，暴力记两...","permalink":"/post/CSP-S-2023游记","photos":[],"count_time":{"symbolsCount":238,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"游记","slug":"游记","count":1,"path":"api/tags/游记.json"}],"author":{"name":"Badnuker","slug":"blog-author","avatar":"https://cdn.luogu.com.cn/upload/usericon/799947.png","link":"/","description":"关注 Badnuker 谢谢喵~","socials":{"github":"https://github.com/Badnuker","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}